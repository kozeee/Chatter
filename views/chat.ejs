<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>
        <%=ChannelID%>
    </title>

    <!-- Mobile Specific Metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- Main Style Css -->
    <base href="/">
    <link rel="stylesheet" href="bootstrap_vapor.css" />
    <script src="https://unpkg.com/@signalwire/js@3.13.1"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa"
        crossorigin="anonymous"></script>
</head>

<body>
    <div id="container d-flex justify-content-center">
        <nav class="navbar navbar-expand-sm">
            <div class="container-fluid">
                <a class="navbar-brand" href="#"></a>
                <div class="navbar" id="navbarNavAltMarkup">
                    <div class="navbar-nav">
                        <a class="nav-link" style="color:white;" href="/users/home">Home</a>
                        <a class="nav-link" style="color:white;" href="/users/sign_out">Logout</a>
                    </div>
                </div>
            </div>
        </nav>
        <div class="row">
            <div class="card col-md-8 d-flex align-items-center">
                <div class="card-header">
                    <h1 id="channelID">
                        <%=ChannelID%>
                    </h1>
                </div>
                <div class="card-body">
                    <div id="chat" class="overflow-auto" style="height:250px;width: 500px;">
                        <div id="messages-list">
                        </div>
                    </div>
                </div>
            </div>
            <div class="card d-flex align-items-center col-md-4">
                <div class="card-header">
                    <h1 id="memberList">
                        Member List
                    </h1>
                </div>
                <div class="card-body">
                    <div id="chat-list overflow-auto">
                        <div id="member-list">
                            <ul>
                                <div class="memberlist">
                                    <% UserList.Users.forEach (username=>{ %>
                                        <div class="dropend">
                                            <a class="dropdown-toggle drp" data-bs-toggle="dropdown"
                                                aria-expanded="false">
                                                <%=username%>
                                            </a>
                                            <ul class="dropdown-menu">
                                                <li><a class="dropdown-item" href="/users/<%=username%>">Profile</a>
                                                </li>
                                            </ul>
                                            <% }) %>
                                        </div>
                                </div>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="card my-2 d-flex justify-content-center text-center">
        </div>
        <div class="card-body d-flex justify-content-center">
            <div id="message-editor" class="col-md-4">
                <textarea id="message-send" class="form-control mb-2" placeholder="Send message..."></textarea>
                <button id="SendBtn" class="btn btn-primary form-control">Send</button>
            </div>
        </div>
    </div>
    </div>

</body>

</html>

<script>
    Chat()
    async function Chat() {
        const SendBtn = document.getElementById("SendBtn")
        SendBtn.addEventListener("click", () => sendMessage())
        const ChannelID = document.getElementById('channelID').innerText

        let response = await fetch('/users/token')
        let token = await response.json()

        const chatClient = new SignalWire.Chat.Client({
            token: token.token
        });

        async function sendMessage() {
            const message = document.getElementById('message-send').value;

            await chatClient.publish({
                channel: ChannelID,
                content: message
            });

            message.value = "";
        }

        async function displayMessage(message, channel) {
            const messageListEl = document.getElementById('messages-list')
            const messageEl = document.createElement("div");
            messageEl.classList.add("message");
            messageEl.innerHTML = `
      <div class="message-meta"></div>
      <div class="message-body"></div>
    `;
            messageEl.querySelector(".message-meta").innerHTML = `<div class="dropend">
                <a class="dropdown-toggle drp" data-bs-toggle="dropdown" aria-expanded="false">${message.member.id} ${message.publishedAt.toLocaleString()})</a>
                <ul class="dropdown-menu">
                   <li><a class="dropdown-item" href="/">${message.member.id}</li>
                    </ul>
                </div>` ;
            messageEl.querySelector(".message-body").innerText = message.content;
            messageListEl.append(messageEl);

            // Scroll to bottom
            messageEl.scrollIntoView(false);
        }

        chatClient.on("message", (message) => {
            displayMessage(message, message.channel);
        });

        async function downloadExistingMessages(channel) {
            console.log('download msg')
            const messages = await chatClient.getMessages({
                channel: channel
            });

            if (!messages?.messages) return;

            for (const msg of messages.messages.reverse()) {
                displayMessage(msg, channel);
            }
        }

        try {
            downloadExistingMessages(ChannelID)
            await chatClient.subscribe(ChannelID)  // channels is an array such as ['office', 'test']
        } catch (error) {
            console.error('Error', error)
        }
    }
</script>